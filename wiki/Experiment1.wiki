#summary 実験: PCMデータのDAC出力波形シミュレーション
#labels Featured

= 実験: PCMデータのDAC出力波形シミュレーション =

*DACの技術解説などで、PCMデジタルデータを階段状の波形で図示するのは、普通のDACのアナログ出力からああいったギザギザの波形が出てくるわけではないので、誤解を招く、よろしくない表現であると考えます。*

この問題について、PCMデータとDAC出力波形(シミュレーション)を比べながら解説します。

= 1. PCMデータ準備 =

http://www.phileweb.com/review/column/image.php?id=118&row=1

「右上のPCMデータ」は
{{{
2,  3,  2,  1,  2,  3,  5,  6,  6,  5,  3
}}}

「右下のPCMデータ」は
{{{
2,  4,  5,  6,  6,  5,  4,  3,  3,  3,  5,  6,  8,  9, 11, 12, 12, 11, 10,  8,  6,  4
}}}

これら2つのデータをバイナリエディタで入力しWAVファイルを作成します。
以下、カッコ内の文章は、細かい話なので読み飛ばしていただいて結構です。

(データを256倍したものを入力。この256倍処理は、本来はDACの中で、オーバーサンプル処理の丸め誤差を減らすために、オーバーサンプル処理の前段で行われます。DACの品種によって、また入力PCMデータの量子化ビット数によって、前処理で何倍されるかは異なってきます。本実験では実際にDACに出力するかわりにDAC出力波形を計算機上でシミュレーションする都合上、前処理として手動で256倍(サンプル値を8ビット左にシフト)します。)

(作ったWAVデータは、量子化ビット数16ビット、リトルエンディアンバイトオーダーなので、
16進数値が、16の位、1の位、4096の位、256の位の順に4個並んだ計2バイト(＝16ビット)の情報がPCMサンプル値1個分の情報になります。たとえば、「右上のPCMデータ」の最初のサンプル値である2は、256倍して10進法で512、16進法で0x0200となります。これをリトルエンディアンバイトオーダーに並び替えたデータ00 02をバイナリエディタに入力します。)

http://bitspersampleconv2.googlecode.com/files/stirling.png

図1: バイナリエディタでPCMデータを作成。

http://bitspersampleconv2.googlecode.com/files/01_2.png

図2: 入力したPCMデータをグラフにそのままプロット。

(図2の点を方眼紙の上にプロットして階段状につなげると、そういう波形がDACのアナログ出力に出るという誤解を生む、問題の図ができます。)

= 2. DAC出力波形のシミュレーション =

1で作ったPCMデータのDAC出力波形をシミュレーションします。
sndfile-resampleで8倍オーバーサンプルして出てきた波形をプロット。

http://bitspersampleconv2.googlecode.com/files/01x8_2.png

図3: DAC出力波形(simulated)。

http://bitspersampleconv2.googlecode.com/files/01_01x8.png

図4: 元のPCMサンプル点とDAC出力波形(simulated)の関係。だいたい波形がサンプル点を通っているように見えますが、よく見ると微妙にずれたところを通っている場合もあります。そういうものです。アナログ出力波形がPCMデータサンプル点を通過しなければならないというルールはありません。

= 考察 =

図3を見て、右上のPCMデータのDAC出力波形と右下のPCMデータのDAC出力波形のどちらが
「元のアナログ信号」に近い形状かを見比べます。

なんとも言えない感じであり、右下のPCMデータのほうが有利とは言いがたい。

これは、例としてあげられているデータが良くないのであって、量子化ビット数やサンプリング周波数を増やしても波形再現性が良くならないということではないです。

DACの技術解説などで、PCMデジタルデータを階段状の波形で図示するのは、
普通のDACのアナログ出力からああいったギザギザの波形が出てくるわけではないので、
誤解を招く、あまりよろしくない表現であると考えます。

私自身も、CDのライナーノートの最後の方のページに、PCMデジタル録音方式の説明として階段状の波形の図が載っていたために、
DACのアナログ出力から階段状の波形が出てくるものだと長いこと誤解しておりました。


また、そこから類推して、48kHzサンプリングで23kHzの正弦波を出すと、1kHzのビートが発生するのではないかと思っていました(これも誤解です)。以下はその説明です。

http://bitspersampleconv2.googlecode.com/files/48k_23k.png

図5: 48kHzサンプリングの23kHz正弦波のPCMデータ。0dB

http://bitspersampleconv2.googlecode.com/files/48k_23k_kaidan2.png 

図6: 階段状の波形がDACから出てくるとしたら、こういう感じの、1kHzの正弦波信号を24kHz矩形波の搬送波でAM変調したみたいな(ちょっと違うけど)出力波形になるはずだが…

http://bitspersampleconv2.googlecode.com/files/48k_23k_output.png

図7: 図5のPCMデータをDACに入力したときにアナログ出力に出てくる波形(赤い実線)

図7の実線の出力レベルが「元のアナログ信号」よりも低く、少しずつ増加しているのは、音が出たばかりでオーバーサンプル処理のためのサンプル点が足りず、まだ安定していないからだと思います。これは、シャープロールオフフィルターの特徴です。シャープロールオフフィルターは、図5のような条件でビートが発生しないが、出力レベルが安定するまでに時間がかかります。
一方、スローロールオフフィルターの場合、図5のような条件で、シャープロールオフフィルターよりもサンプル点によく追従するようになりますが、そのかわりにビートが発生します。したがって、どちらが良いということではなく、一長一短です。